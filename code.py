# -*- coding: utf-8 -*-
"""gumushane.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SQbcB5Xn2E1rcGfRHP48to2-XXyRJdgI

Google drive ile bağlantı kurduk.
"""

from google.colab import drive
drive.mount('/content/drive')

"""Google drive üzerinden csv tipindeki veri setimizi çektik."""

adres = "dataset.csv"
!cp "{adres}" .

"""Gerekli kütüphaneleri importladık."""

import numpy as np
import pandas as pd

"""Pandas kütüphanesi ile csv dosyamızı okuduk ve dataset değişkenine attık."""

dataset=pd.read_csv('/content/gumushanedataset.csv')

"""Datasetimizi ekrana yazdırdık."""

dataset.describe()

"""Datasetimiziniz içinde bulunun kolonları ekrana yazdırdık."""

dataset.columns

"""y değişkeni içerisine Fiyat stununu atıyoruz."""

y=dataset["Fiyat"]

"""dateset_stunları dizisine datasetimizin stunlarının başlıklarını girdik."""

dataset_stunları=['m² (Brüt)','m² (Net)','Oda Sayısı','Salon Sayısı','Bina Yaşı','Bulunduğu Kat','Kat Sayısı','Isıtma','Banyo Sayısı','Balkon','Eşyalı','Site İçerisinde','Kimden']

"""X değişkenine geri kalan tüm dataset verilerimizi attık."""

X=dataset[dataset_stunları]

"""X datasetimizin merkezi eğilim dağılımını hesaplattık."""

X.describe()

"""Data setimizin ilk 5 verisini ekrana yazdırdık."""

X.head()

"""Karar ağacımızı oluşturduk."""

from sklearn.tree import DecisionTreeRegressor
melbourne_model=DecisionTreeRegressor(random_state=1
                                     )
melbourne_model.fit(X,y)

"""Dataset içerisindeki ilk 10 ev için tahminde bulunduk."""

print("Aşağıdaki 5 ev için tahminlerde bulduk.")
print(X.head(10))
print("Tahminler")
for i in range(10):
  print(y[i])
print(melbourne_model.predict(X.head(10)))

"""Eğitim datamızın MSE ve R değerini hesaplatıyoruz."""

from sklearn.metrics import mean_squared_error

tahmin_edilen_ev_fiyatı=melbourne_model.predict(X)
print('MSE: ',mean_squared_error(y,tahmin_edilen_ev_fiyatı))
print('RMSE:',np.sqrt(mean_squared_error(y,tahmin_edilen_ev_fiyatı)))

"""Verisetimizin %30 unu test verisi olarak belirleyip. Test verimizin MSE ve R değerlerini hesaplatıyoruz."""

from sklearn.model_selection import train_test_split

train_X,val_X,train_y,val_y=train_test_split(X,y,random_state=0,test_size=0.3)

melbourne_model=DecisionTreeRegressor()
melbourne_model.fit(train_X,train_y)
tahminedilen_deger=melbourne_model.predict(val_X)
print('MSE',mean_squared_error(val_y, tahminedilen_deger))
print('RMSE:', np.sqrt(mean_squared_error(val_y, tahminedilen_deger))) 
score=melbourne_model.score(val_X,val_y)
print(score)